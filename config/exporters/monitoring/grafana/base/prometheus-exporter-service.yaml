apiVersion: v1
kind: Namespace
metadata:
  name: appstudio-grafana-datasource-exporter
spec: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: exporter-sa
  namespace: appstudio-grafana-datasource-exporter
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: exporter-cluster-role
rules:
- apiGroups: ['grafana.integreatly.org']
  resources: ['grafanas']
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: exporter-cluster-role-binding
subjects:
- kind: ServiceAccount
  name: exporter-sa
  namespace: appstudio-grafana-datasource-exporter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: exporter-cluster-role
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-rbac-proxy
rules:
- apiGroups: ["authentication.k8s.io"]
  resources:
  - tokenreviews
  verbs: ["create"]
- apiGroups: ["authorization.k8s.io"]
  resources:
  - subjectaccessreviews
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: exporter-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-rbac-proxy
subjects:
- kind: ServiceAccount
  name: exporter-sa
  namespace: appstudio-grafana-datasource-exporter
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: grafana-datasource-exporter
  name: exporter-service
  namespace: appstudio-grafana-datasource-exporter
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app: grafana-datasource-exporter
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: exporter-service-deployment
  namespace: appstudio-grafana-datasource-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana-datasource-exporter
  template:
    metadata:
      labels:
        app: grafana-datasource-exporter
    spec:
      serviceAccountName: exporter-sa
      containers:
      - name: kube-rbac-proxy
        image: quay.io/brancz/kube-rbac-proxy:v0.14.0
        args:
        - "--secure-listen-address=0.0.0.0:8443"
        - "--upstream=http://127.0.0.1:8090/"
        - "--logtostderr=true"
        - "--v=10"
        ports:
        - containerPort: 8443
          name: https
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      - name: exporters
        image: exporter:latest
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
